<?php

namespace ResultadoBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * TorneoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CronogramaRepository extends EntityRepository
{
    public function getAllByEventos($eventos)
    {
        $idEve = [];
        foreach($eventos as $evento){
            $idEve[] = $evento->getId();
        }
        $d1=new \DateTime();
        //$d1->modify('+2 day');
        $d1->modify('-1 hour');
        return $this->getEntityManager()
                    ->createQuery(" SELECT cr
                                    FROM ResultadoBundle:Cronograma cr
                                    JOIN cr.eventos ev
                                    WHERE ev.id IN (?1) AND cr.fecha > ?2")
                    ->setParameter(1,$idEve)
                    ->setParameter(2,$d1)
                    ->getResult();
        ;
    }
    
    public function getByIds($ids)
    {
        return $this->getEntityManager()
                    ->createQuery(" SELECT cr
                                    FROM ResultadoBundle:Cronograma cr
                                    WHERE cr.id IN (?1)
                                    ORDER BY cr.fecha ASC")
                    ->setParameter(1,$ids)
                    ->getResult();
        ;
    }
    
    public function getAllByMunicipio($municipio = false,$fecha = false)
    {
        $q="SELECT cr
            FROM ResultadoBundle:Cronograma cr
            JOIN cr.eventos ev
            JOIN ev.equipos eq
            WHERE 1=1";
        if ($municipio){
            $q.=" AND eq.municipio = ?1";
        }
        if ($fecha){
            $q.=" AND cr.fecha between ?2 AND ?3";
        }
        $q = $this->getEntityManager()
                    ->createQuery($q);
        
        if ($fecha){
            $d1=new \DateTime($fecha." 00:00:00");
            $d2=new \DateTime($fecha." 23:59:59");
            $q->setParameter(2,$d1)->setParameter(3,$d2);
        }
        if ($municipio){
            $q->setParameter(1,$municipio);
        }
        //echo $q->getSql();die();
        return $q->getResult();
    }
    public function getAllPartidosByMunicipio($municipio,$fecha = false)
    {
        $q = " SELECT cr
                FROM ResultadoBundle:CronogramaPartido cr
                JOIN cr.partido pa
                LEFT JOIN pa.plaza1 pz1
                LEFT JOIN pa.plaza2 pz2
                LEFT JOIN pz1.equipo eq1
                LEFT JOIN pz2.equipo eq2
                WHERE 1=1 ";
        if ($municipio){
            $q.=" AND (eq1.municipio = ?1 OR eq2.municipio = ?1)";
        }
        if ($fecha){
            $q.=" AND cr.fecha between ?2 AND ?3";
        }                
        $q = $this->getEntityManager()
                    ->createQuery($q);
        
        if ($fecha){
            $d1=new \DateTime($fecha." 00:00:00");
            $d2=new \DateTime($fecha." 23:59:59");
            $q->setParameter(2,$d1)->setParameter(3,$d2);
        }
        if ($municipio){
            $q->setParameter(1,$municipio);
        }
        return $q->getResult();
    }
    
    public function getAllByEvento($evento,$fecha = false)
    {
        $q = " SELECT cr
                FROM ResultadoBundle:Cronograma cr
                JOIN cr.eventos ev
                WHERE 1=1 ";
        if ($evento){
            $q.=" AND ev = ?1";
        }
        if ($fecha){
            $q.=" AND cr.fecha between ?2 AND ?3";
        }                
        $q = $this->getEntityManager()
                    ->createQuery($q);
        
        if ($fecha){
            $d1=new \DateTime($fecha." 00:00:00");
            $d2=new \DateTime($fecha." 23:59:59");
            $q->setParameter(2,$d1)->setParameter(3,$d2);
        }
        if ($evento){
            $q->setParameter(1,$evento);
        }
        return $q->getResult();
    
        
        //if ($fecha){
        //    $d1=new \DateTime($fecha." 00:00:00");
        //    $d2=new \DateTime($fecha." 23:59:59");
        //    return $this->getEntityManager()
        //                ->createQuery(" SELECT cr
        //                                FROM ResultadoBundle:Cronograma cr
        //                                JOIN cr.eventos ev
        //                                WHERE ev = ?1 AND cr.fecha between ?2 AND ?3")
        //                ->setParameter(1,$evento)
        //                ->setParameter(2,$d1)
        //                ->setParameter(3,$d2)
        //                ->getResult();
        //    ;
        //}else{
        //    return $this->getEntityManager()
        //            ->createQuery(" SELECT cr
        //                            FROM ResultadoBundle:Cronograma cr
        //                            JOIN cr.eventos ev
        //                            WHERE ev = ?1")
        //            ->setParameter(1,$evento)
        //            ->getResult();
        //;            
        //}
    }
    public function getAllPartidosByEvento($evento,$fecha = false)
    {
        $q = " SELECT cr
                FROM ResultadoBundle:CronogramaPartido cr
                JOIN cr.partido pa
                JOIN pa.plaza1 pz1
                JOIN pz1.competencia com
                JOIN com.etapa et
                JOIN et.evento ev
                WHERE 1=1 ";
        if ($evento){
            $q.=" AND (ev = ?1)";
        }
        if ($fecha){
            $q.=" AND cr.fecha between ?2 AND ?3";
        }                
        $q = $this->getEntityManager()
                    ->createQuery($q);
        
        if ($fecha){
            $d1=new \DateTime($fecha." 00:00:00");
            $d2=new \DateTime($fecha." 23:59:59");
            $q->setParameter(2,$d1)->setParameter(3,$d2);
        }
        if ($evento){
            $q->setParameter(1,$evento);
        }
        return $q->getResult();
    
    
        //if ($fecha){
        //    $d1=new \DateTime($fecha." 00:00:00");
        //    $d2=new \DateTime($fecha." 23:59:59");
        //    return $this->getEntityManager()
        //                ->createQuery(" SELECT cr
        //                                FROM ResultadoBundle:CronogramaPartido cr
        //                                JOIN cr.partido pa
        //                                LEFT JOIN pa.plaza1 pz1
        //                                LEFT JOIN pa.plaza2 pz2
        //                                LEFT JOIN pz1.equipo eq1
        //                                LEFT JOIN pz2.equipo eq2
        //                                WHERE eq1.evento = ?1 AND cr.fecha between ?2 AND ?3")
        //                ->setParameter(1,$evento)
        //                ->setParameter(2,$d1)
        //                ->setParameter(3,$d2)
        //                ->getResult();
        //    ;
        //}else{
        //    return $this->getEntityManager()
        //            ->createQuery(" SELECT cr
        //                            FROM ResultadoBundle:CronogramaPartido cr
        //                            JOIN cr.partido pa
        //                            LEFT JOIN pa.plaza1 pz1
        //                            LEFT JOIN pa.plaza2 pz2
        //                            LEFT JOIN pz1.equipo eq1
        //                            LEFT JOIN pz2.equipo eq2
        //                            WHERE eq1.evento = ?1")
        //            ->setParameter(1,$evento)
        //            ->getResult();
        //;            
        //}
    }    
}
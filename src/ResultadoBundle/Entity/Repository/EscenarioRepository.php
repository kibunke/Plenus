<?php

namespace ResultadoBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * EscenarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EscenarioRepository extends EntityRepository
{
    public function dataTable($request)
    {
        return array(
                      "total"    => $this->getTotalRows(),
                      "filtered" => $this->getFilteredRows($request),
                      "rows"     => $this->getRows($request)
            );
    }

    public function getRows($request)
    {
        $columns = ["e.id","e.nombre","l.nombre","e.latlng",""];
        $where = "( e.id LIKE ?1 OR
                    e.nombre LIKE ?1 OR
                    e.calle LIKE ?1 OR
                    e.esquina LIKE ?1 OR
                    e.numero LIKE ?1 OR
                    l.nombre LIKE ?1 )";

        return $this->getEntityManager()
                        ->createQuery(" SELECT e
                                        FROM ResultadoBundle:Escenario e
                                        JOIN e.localidad l
                                        WHERE $where
                                        ORDER BY ".$columns[$request->get('order')[0]['column']]." ".$request->get('order')[0]['dir'])
                        ->setParameter(1,'%'.$request->get('search')['value'].'%')
                        ->setMaxResults($request->get('length'))
                        ->setFirstResult($request->get('start'))
                        ->getResult();
    }

    public function getFilteredRows($request)
    {
        $where = "( e.id LIKE ?1 OR
                    e.nombre LIKE ?1 OR
                    e.calle LIKE ?1 OR
                    e.esquina LIKE ?1 OR
                    e.numero LIKE ?1 OR
                    l.nombre LIKE ?1 )";

        return $this->getEntityManager()
                        ->createQuery(" SELECT COUNT(e)
                                        FROM ResultadoBundle:Escenario e
                                        JOIN e.localidad l
                                        WHERE $where ")
                        ->setParameter(1,'%'.$request->get('search')['value'].'%')
                        ->getSingleScalarResult();
    }

    public function getTotalRows()
    {
        return $this->getEntityManager()
                        ->createQuery(" SELECT COUNT(e)
                                        FROM ResultadoBundle:Escenario e")
                        ->getSingleScalarResult();
    }
}

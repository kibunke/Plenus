<?php
namespace JuegosBA\ResultadoBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * JuegosBA\ResultadoBundle\Entity\Partido
 *
 * @ORM\Entity
 * @ORM\InheritanceType("SINGLE_TABLE")
 * @ORM\DiscriminatorColumn(name="discr", type="string")
 * @ORM\DiscriminatorMap({
 *                          "partido"       = "Partido",
 *                          "partidoPuntos" = "PartidoPuntos",
 *                          "partidoTantos"    = "PartidoTantos"
 *                      })
 */
abstract class Partido
{
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @var string $nombre
     *
     * @ORM\Column(name="nombre", type="string", length=100)
     */
    private $nombre;
    
     /**
     * @var string $descripcion
     *
     * @ORM\Column(name="descripcion", type="text", nullable=true)
     */
    private $descripcion;
   
    /**
    * @var string $parametros
    *
    * @ORM\Column(name="parametros", type="text", nullable=true)
    */
    private $parametros;
    
    /**
     * @ORM\ManyToOne(targetEntity="Plaza", inversedBy="partidosLocal", cascade={"all"})
     * @ORM\JoinColumn(name="plaza1", referencedColumnName="id", nullable=false)
     */    
    private $plaza1;
    
    /**
     * @ORM\ManyToOne(targetEntity="Plaza", inversedBy="partidosVisitante", cascade={"all"})
     * @ORM\JoinColumn(name="plaza2", referencedColumnName="id", nullable=false)
     */    
    private $plaza2;
    
    /**
     * @ORM\ManyToOne(targetEntity="Zona", inversedBy="partidos")
     * @ORM\JoinColumn(name="zona", referencedColumnName="id")
     */
    private $zona;
    
    /**
     * @ORM\ManyToOne(targetEntity="CompetenciaEliminacionDirecta", inversedBy="partidos")
     * @ORM\JoinColumn(name="copa", referencedColumnName="id")
     */
    private $copa;    
    
    /**
     * @ORM\OneToOne(targetEntity="CronogramaPartido", mappedBy="partido")
     **/
    private $cronograma;

    /**
     * @ORM\OneToMany(targetEntity="Partido", mappedBy="siguiente")
     **/
    private $anteriores;
    
    /**
     * @ORM\ManyToOne(targetEntity="Partido", inversedBy="anteriores")
     * @ORM\JoinColumn(name="jerarquiaDePatidos", referencedColumnName="id")
     **/
    private $siguiente;
    
    /**
     * @var integer $orden
     *
     * @ORM\Column(name="orden", type="integer")
     */
    protected $orden;
   
    /**
     * @var integer $nivel
     *
     * @ORM\Column(name="nivel", type="integer")
     */
    protected $nivel;
   
    /**
     * @var datetime $createdAt
     *
     * @ORM\Column(name="createdAt", type="datetime")
     */
    private $createdAt;
    
    /**
     * @var JuegosBA\SeguridadBundle\Entity\Usuario $createdBy
     * 
     * @ORM\ManyToOne(targetEntity="JuegosBA\SeguridadBundle\Entity\Usuario")
     * @ORM\JoinColumn(name="createdBy", referencedColumnName="id")
     */
    private $createdBy;
    
    /**
     * @var datetime $updatedAt
     *
     * @ORM\Column(name="updatedAt", type="datetime", nullable=true)
     */
    private $updatedAt;
    
    /**
     * @var JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy
     * 
     * @ORM\ManyToOne(targetEntity="JuegosBA\SeguridadBundle\Entity\Usuario")
     * @ORM\JoinColumn(name="updatedBy", referencedColumnName="id")
     */   
    private $updatedBy;
    
    public function __construct($user = NULL) {
        $this->createdAt = new \DateTime();
        $this->createdBy = $user;
        $this->setCronograma(new CronogramaPartido($user));
    }

    /**
     * __toString
     *
     * @return string
     */
    public function __toString()
    {
        return $this->nombre;
    }
    
    /**
     * resetResultado
     *
     * @return boolean
     */
    public function resetResultado()
    {
        $this->setResultadoLocal(NULL);
        $this->setResultadoVisitante(NULL);
        $this->setResultadoSecundarioLocal(NULL);
        $this->setResultadoSecundarioVisitante(NULL);
    }    
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nombre
     *
     * @param string $nombre
     * @return Competencia
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get nombre
     *
     * @return string 
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Set descripcion
     *
     * @param string $descripcion
     * @return Competencia
     */
    public function setDescripcion($descripcion)
    {
        $this->descripcion = $descripcion;

        return $this;
    }

    /**
     * Get descripcion
     *
     * @return string 
     */
    public function getDescripcion()
    {
        return $this->descripcion;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     * @return Competencia
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime 
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     * @return Competencia
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime 
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }
 
    /**
     * Set createdBy
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $createdBy
     * @return Competencia
     */
    public function setCreatedBy(\JuegosBA\SeguridadBundle\Entity\Usuario $createdBy = null)
    {
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Get createdBy
     *
     * @return \JuegosBA\SeguridadBundle\Entity\Usuario 
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Set updatedBy
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy
     * @return Competencia
     */
    public function setUpdatedBy(\JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy = null)
    {
        $this->updatedBy = $updatedBy;

        return $this;
    }

    /**
     * Get updatedBy
     *
     * @return \JuegosBA\SeguridadBundle\Entity\Usuario 
     */
    public function getUpdatedBy()
    {
        return $this->updatedBy;
    }

    /**
     * Set parametros
     *
     * @param string $parametros
     * @return Disciplina
     */
    public function setParametros($parametros)
    {
        $this->parametros = $parametros;

        return $this;
    }

    /**
     * Get parametros
     *
     * @return string 
     */
    public function getParametros()
    {
        return $this->parametros;
    }
    
    /**
     * Set zona
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Zona $zona
     * @return Plaza
     */
    public function setZona(\JuegosBA\ResultadoBundle\Entity\Zona $zona = null)
    {
        $this->zona = $zona;

        return $this;
    }

    /**
     * Get zona
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Zona 
     */
    public function getZona()
    {
        return $this->zona;
    }
    
    /**
     * Set plaza1
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Plaza $plaza1
     * @return Partido
     */
    public function setPlaza1(\JuegosBA\ResultadoBundle\Entity\Plaza $plaza = null)
    {
        $this->plaza1 = $plaza;

        return $this;
    }

    /**
     * Get plaza1
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Plaza 
     */
    public function getPlaza1()
    {
        return $this->plaza1;
    }
    
    /**
     * Set plaza1
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Plaza $plaza
     * @return Partido
     */
    public function setPlaza2(\JuegosBA\ResultadoBundle\Entity\Plaza $plaza = null)
    {
        $this->plaza2 = $plaza;

        return $this;
    }

    /**
     * Get plaza2
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Plaza 
     */
    public function getPlaza2()
    {
        return $this->plaza2;
    }   

    /**
     * Set cronograma
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Cronograma $cronograma
     * @return Partido
     */
    public function setCronograma(\JuegosBA\ResultadoBundle\Entity\Cronograma $cronograma = null)
    {
        $this->cronograma = $cronograma;

        return $this;
    }

    /**
     * Get cronograma
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Cronograma 
     */
    public function getCronograma()
    {
        return $this->cronograma;
    }
    
    /** 
     * Get puntos
     *
     * @return array
     */
    public function soyLocal($plaza)
    {
        if ($plaza == $this->getPlaza1())
            return true;
        return false;
    }
    
    /** 
     * Get jugado
     *
     * @return boolean
     */
    public function jugado()
    {
        if ($this->getResultadoLocal())
            return true;
        return false;
    }
    
    /**
     * Get state
     *
     * @return string
     */
    public function getState()
    {
        if ($this->jugado())
            return 100;
        return 0;
    }     

    /**
     * Add anteriores
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Partido $anteriores
     * @return Partido
     */
    public function addAnteriore(\JuegosBA\ResultadoBundle\Entity\Partido $anteriores)
    {
        $this->anteriores[] = $anteriores;

        return $this;
    }

    /**
     * Remove anteriores
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Partido $anteriores
     */
    public function removeAnteriore(\JuegosBA\ResultadoBundle\Entity\Partido $anteriores)
    {
        $this->anteriores->removeElement($anteriores);
    }

    /**
     * Get anteriores
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getAnteriores()
    {
        return $this->anteriores;
    }

    /**
     * Set siguiente
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Partido $siguiente
     * @return Partido
     */
    public function setSiguiente(\JuegosBA\ResultadoBundle\Entity\Partido $siguiente = null)
    {
        $this->siguiente = $siguiente;

        return $this;
    }

    /**
     * Get siguiente
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Partido 
     */
    public function getSiguiente()
    {
        return $this->siguiente;
    }

    /**
     * Set orden
     *
     * @param integer $orden
     * @return Partido
     */
    public function setOrden($orden)
    {
        $this->orden = $orden;

        return $this;
    }

    /**
     * Get orden
     *
     * @return integer 
     */
    public function getOrden()
    {
        return $this->orden;
    }

    /**
     * Set nivel
     *
     * @param integer $nivel
     * @return Partido
     */
    public function setNivel($nivel)
    {
        $this->nivel = $nivel;

        return $this;
    }

    /**
     * Get nivel
     *
     * @return integer 
     */
    public function getNivel()
    {
        return $this->nivel;
    }

    /**
     * Set copa
     *
     * @param \JuegosBA\ResultadoBundle\Entity\CompetenciaEliminacionDirecta $copa
     * @return Partido
     */
    public function setCopa(\JuegosBA\ResultadoBundle\Entity\CompetenciaEliminacionDirecta $copa = null)
    {
        $this->copa = $copa;

        return $this;
    }

    /**
     * Get copa
     *
     * @return \JuegosBA\ResultadoBundle\Entity\CompetenciaEliminacionDirecta 
     */
    public function getCopa()
    {
        return $this->copa;
    }

    /**
     * Get evento
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Evento
     */
    public function getEvento()
    {
        if ($this->getCopa())
            return $this->getCopa()->getEtapa()->getEvento();
        return $this->getZona()->getLiga()->getEtapa()->getEvento();
    }
    
    /**
     * Get idReload
     *
     * @return integer
     */
    public function getIdReload()
    {
        return $this->getPlaza1()->getIdReload();
    }    
}

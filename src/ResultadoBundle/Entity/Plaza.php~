<?php
namespace JuegosBA\ResultadoBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * JuegosBA\ResultadoBundle\Entity\Plaza
 * @ORM\Table(name="services_juegosba_final.Plaza")
 * @ORM\Entity()
 */
class  Plaza
{
   /**
    * @var integer $id
    *
    * @ORM\Column(name="id", type="integer")
    * @ORM\Id
    * @ORM\GeneratedValue(strategy="AUTO")
    */
   private $id;

   /**
    * @var string $nombre
    *
    * @ORM\Column(name="nombre", type="string", length=100)
    */
   protected $nombre;

   /**
    * @var integer $orden
    *
    * @ORM\Column(name="orden", type="integer")
    */
   protected $orden;
   
    /**
    * @var integer $ordenNatural
    *
    * @ORM\Column(name="ordenNatural", type="integer", nullable=true)
    */
   private $ordenNatural;
   
    /**
    * @var string $descripcion
    *
    * @ORM\Column(name="descripcion", type="text", nullable=true)
    */
   private $descripcion;
   
   /**
    * @ORM\ManyToOne(targetEntity="Equipo", inversedBy="plazas")
    * @ORM\JoinColumn(name="equipo", referencedColumnName="id")
    */       
   private $equipo;
   
    /**
     * @ORM\ManyToOne(targetEntity="Competencia", inversedBy="plazas")
     * @ORM\JoinColumn(name="competencia", referencedColumnName="id", nullable=false )
     */
    private $competencia;
    
    /**
     * @ORM\ManyToOne(targetEntity="Zona", inversedBy="plazas")
     * @ORM\JoinColumn(name="zona", referencedColumnName="id")
     */
    private $zona;
    
    /**
     * @ORM\OneToMany(targetEntity="Partido", mappedBy="plaza1", cascade={"all"})
     */
    private $partidosLocal;

    /**
     * @ORM\OneToMany(targetEntity="Partido", mappedBy="plaza2", cascade={"all"})
     */
    private $partidosVisitante;
    
    /**
     * @var datetime $createdAt
     *
     * @ORM\Column(name="createdAt", type="datetime")
     */
    private $createdAt;
    
    /**
     * @var JuegosBA\SeguridadBundle\Entity\Usuario $createdBy
     * 
     * @ORM\ManyToOne(targetEntity="JuegosBA\SeguridadBundle\Entity\Usuario")
     * @ORM\JoinColumn(name="createdBy", referencedColumnName="id")
     */
    private $createdBy;
    
    /**
     * @var datetime $updatedAt
     *
     * @ORM\Column(name="updatedAt", type="datetime", nullable=true)
     */
    private $updatedAt;
    
    /**
     * @var JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy
     * 
     * @ORM\ManyToOne(targetEntity="JuegosBA\SeguridadBundle\Entity\Usuario")
     * @ORM\JoinColumn(name="updatedBy", referencedColumnName="id")
     */   
    private $updatedBy;
    
    /**
     * Construct
     */
    public function __construct($user = NULL,$nombre = "",$orden = 99,$competencia = null) {
        $this->createdAt = new \DateTime();
        $this->createdBy = $user;
        $this->setNombre($nombre);
        $this->setOrden($orden);
        $this->setOrdenNatural(99);
        $this->setCompetencia($competencia);
    }

    /**
     * __toString
     *
     * @return string 
     */
    public function __toString()
    {
        return $this->nombre;
    }
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nombre
     *
     * @param string $nombre
     * @return Plaza
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get nombre
     *
     * @return string 
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Get nombreMedalleroRaw
     *
     * @return string 
     */
    public function getNombreMedalleroRaw()
    {
        if ($this->getEquipo())
            return "<div>
                        <small>".$this->nombre."</small><br>
                        <strong>".$this->getEquipo()->getNombre()."</strong>
                    </div>";
        return "<div>
                    <small>".$this->nombre."</small><br>
                    <strong class='text-danger'>Esta medalla no está asignada aún</strong>
                </div>";
    }

    /**
     * Get nombreCompetenciaRaw
     *
     * @return string 
     */
    public function getNombreCompetenciaRaw()
    {
        $equipo = $this->getEquipo();
        if ($equipo){
            return "<div>
                        <strong>".$equipo->getMunicipio()->getNombre()."</strong><br>
                        <small>".$this->getEquipo()->getNombre()."</small>
                    </div>";
        }
        return "<div>
                    <small>".$this->nombre."</small><br>
                    <strong class='text-danger'>Sin asignar</strong>
                </div>";
    }
    
    /**
     * Set orden
     *
     * @param integer $orden
     * @return Plaza
     */
    public function setOrden($orden)
    {
        $this->orden = $orden;

        return $this;
    }

    /**
     * Get orden
     *
     * @return integer 
     */
    public function getOrden()
    {
        return $this->orden;
    }

    /**
     * Set ordenNatural
     *
     * @param integer $ordenNatural
     * @return Plaza
     */
    public function setOrdenNatural($ordenNatural)
    {
        $this->ordenNatural = $ordenNatural;

        return $this;
    }

    /**
     * Get ordenNatural
     *
     * @return integer 
     */
    public function getOrdenNatural()
    {
        return $this->ordenNatural;
    }
    
    /**
     * Set descripcion
     *
     * @param string $descripcion
     * @return Plaza
     */
    public function setDescripcion($descripcion)
    {
        $this->descripcion = $descripcion;

        return $this;
    }

    /**
     * Get descripcion
     *
     * @return string 
     */
    public function getDescripcion()
    {
        return $this->descripcion;
    }

    /**
     * Set equipo
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Equipo $equipo
     * @return Plaza
     */
    public function setEquipo(\JuegosBA\ResultadoBundle\Entity\Equipo $equipo = null)
    {
        $this->equipo = $equipo;

        return $this;
    }

    /**
     * Get equipo
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Equipo 
     */
    public function getEquipo()
    {
        return $this->equipo;
    }
    
    /**
     * Set competencia
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Competencia $competencia
     * @return Plaza
     */
    public function setCompetencia(\JuegosBA\ResultadoBundle\Entity\Competencia $competencia = null)
    {
        $this->competencia = $competencia;

        return $this;
    }

    /**
     * Get competencia
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Competencia 
     */
    public function getCompetencia()
    {
        return $this->competencia;
    }

    /**
     * Set zona
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Zona $zona
     * @return Plaza
     */
    public function setZona(\JuegosBA\ResultadoBundle\Entity\Zona $zona = null)
    {
        $this->zona = $zona;

        return $this;
    }

    /**
     * Get zona
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Zona 
     */
    public function getZona()
    {
        return $this->zona;
    }
    
    /**
     * Set createdBy
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $createdBy
     * @return Equipo
     */
    public function setCreatedBy(\JuegosBA\SeguridadBundle\Entity\Usuario $createdBy = null)
    {
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Get createdBy
     *
     * @return \JuegosBA\SeguridadBundle\Entity\Usuario 
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Set updatedBy
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy
     * @return Equipo
     */
    public function setUpdatedBy(\JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy = null)
    {
        $this->updatedBy = $updatedBy;

        return $this;
    }

    /**
     * Get updatedBy
     *
     * @return \JuegosBA\SeguridadBundle\Entity\Usuario 
     */
    public function getUpdatedBy()
    {
        return $this->updatedBy;
    }
    
    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     * @return Equipo
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime 
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     * @return Equipo
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime 
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Add partidoLocal
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Partido $partido
     * @return Competencia
     */
    public function addPartidoLocal(\JuegosBA\ResultadoBundle\Entity\Partido $partido)
    {
        $this->partidosLocal[] = $partido;
        $partido->setPlaza1($this);

        return $this;
    }

    /**
     * Remove partidoLocal
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Partido $partido
     */
    public function removePartidoLocal(\JuegosBA\ResultadoBundle\Entity\Partido $partido)
    {
        $this->partidosLocal->removeElement($partido);
    }

    /** 
     * Get partidosLocal
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getPartidosLocal()
    {
        return $this->partidosLocal;
    }
    
    /**
     * Add partidoVisitante
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Partido $partido
     * @return Competencia
     */
    public function addPartidoVisitante(\JuegosBA\ResultadoBundle\Entity\Partido $partido)
    {
        $this->partidosVisitante[] = $partido;
        $partido->setPlaza2($this);

        return $this;
    }

    /**
     * Remove partidoVisitante
     *
     * @param \JuegosBA\ResultadoBundle\Entity\Partido $partido
     */
    public function removePartidoVisitant(\JuegosBA\ResultadoBundle\Entity\Partido $partido)
    {
        $this->partidosVisitante->removeElement($partido);
    }

    /** 
     * Get partidosVisitante
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getPartidosVisitante()
    {
        return $this->partidosVisitante;
    }
    
    /**
     * Get medallaRaw
     *
     * @return html
     */
    public function getMedalla()
    {
        return $this->getCompetencia()->getMedalla($this);
    }
    
    /**
     * Get idReload
     *
     * @return integer
     */
    public function getIdReload()
    {
        return $this->getCompetencia()->getIdReload($this);
    }
    
    /**
     * Get evento
     *
     * @return \JuegosBA\ResultadoBundle\Entity\Evento
     */
    public function getEvento()
    {
        return $this->getCompetencia()->getEtapa()->getEvento();
    }    
}

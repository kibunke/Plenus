{% extends 'CommonBundle::layout.html.twig' %}

{% block contenidoToolbar %}
    <div class="toolbar row">
        <div class="col-sm-6 hidden-xs">
            <div class="page-header">
                <h1><i class="fa fa-list"></i> Analítico de Personal<small></small></h1>
            </div>
        </div>
        <div class="col-sm-6 col-xs-12">
            <a href="#" class="close-subviews">
                <i class="fa fa-arrow-left"></i> VOLVER
            </a>            
            <div class="toolbar-tools pull-right">
                <!-- start: TOP NAVIGATION MENU -->
                <ul class="nav navbar-right">
                </ul>
                <!-- end: TOP NAVIGATION MENU -->
            </div>
        </div>
    </div>
{% endblock %}
{% block contenidoBreadcrumb %}
    <div class="row">
        <div class="col-md-12">
            <ol class="breadcrumb">
                <li>
                    <a href="{{ path('homepage') }}">
                        <i class="fa fa-home" aria-hidden="true"></i>
                    </a>
                </li>
                <li class="active">
                    Tesorería
                </li>
                <li class="active">
                    Analítico de Personal
                </li>                
            </ol>
        </div>
    </div>
{% endblock %}
{% block contenidoContent %}  
    <div class="row">
        <div class="col-sm-12">
            <div class="panel panel-white">
                <div class="panel-heading">
                    <h4 class="panel-title">Analítico de<span class="text-bold"> Personal</span></h4>
                    <div class="panel-tools">
                        {{ include('CommonBundle::dropdownTables.html.twig') }}
                    </div>
                </div>
                <div class="panel-body">
                    <table id="analiticoPersonalTable" class="table table-striped table-hover" width="100%">
                        <thead>
                            <tr>
                                <th class="text-center">#</th>
                                <th style="width: 40%;">Nombre</th>
                                <th>Sector</th>
                                <th class="text-center" title="Importe">Fondo</th>
                                <th class="text-center" title="Fondo"><i class="fa fa-usd" aria-hidden="true"></i></th>
                                <th class="text-center" title="Estado"><i class="fa fa-flag-o" aria-hidden="true"></i></th>
                                <th class="text-center" title="Fecha de pago"><i class="fa fa-calendar" aria-hidden="true"></i></th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for persona in personal %}
                                {% set movimiento = persona.datosTesoreria.getUltMovimiento() %}
                                <tr>
                                    <td class="text-center"><i class="fa fa-user"></i></td>
                                    <td class="" style="width: 40%;">
                                        <strong>{{ persona.datosPersonales.getNombreCompleto() }}</strong><br>
                                        <small>{{ persona.datosPersonales.documentoTipo}}: {{ persona.datosPersonales.documentoNro }}</small>
                                    </td>
                                    <td>{{ persona.area.nombre }}</td>
                                    <td>{% if (movimiento) %}{{ movimiento.fondo.nombre }}{% else %}<span class="text-danger">Sin asignar</span>{% endif %}</td>
                                    <td class="text-center money-text">{{ persona.datosTesoreria.getRemuneracion() }}</td>
                                    {% if (movimiento) %}
                                        <td class="text-center"><i class="fa fa-lg {{ movimiento.estado.icon }}" aria-hidden="true" title="{{ movimiento.estado.getTxT() }}"></i><span class="sr-only">{{ movimiento.estado.getTxT() }}</span></td>
                                    {% else %}
                                        <td class="text-center"><i class="fa fa-lg fa-frown-o text-danger" aria-hidden="true" title="Sin movimiento"></i><span class="sr-only">Sin movimiento</span></td>
                                    {% endif %}
                                    <td class="text-center">{% if (movimiento and movimiento.recibo) %}{{ movimiento.recibo.getCreatedAt() | date('d/m/Y') }}{% else %}-{% endif %}</td>
                                </tr>
                            {% endfor %}
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="4" class="text-right"><b>TOTAL</b></td>
                                <td class="totales text-center money-text"><i class="fa fa-refresh fa-spin"></i></td>                                
                                <td class="totales text-center money-text"></td>
                                <td class="totales text-center money-text"></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>            
            </div>
        </div>        
    </div>
    <!-- start: SUBVIEW EXAMPLE FOR THIS PAGE ONLY -->
    <a id="sub_go" href="#example-subview-1" class="hidden show-sv"></a>
    <div id="example-subview-1" class="no-display">
        <div class="col-md-10 col-md-offset-1 ajax-cont"></div>
    </div>    
{% endblock %}
{% block otherStylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/common/plugins/sweetalert/lib/sweet-alert.css' ) }}" />
{% endblock %}

{% block otherJavascripts %}
    <script src="{{ asset('bundles/common/plugins/sweetalert/lib/sweet-alert.min.js' )}}"></script>   

    <script>
        (function ($) {
            // no se sobreescribe el namespace, si ya existe
            $.Fondo = $.Fondo || {};
            $.Fondo.init = function() {               
                total = 0;
                _tableAreas = $('#analiticoPersonalTable').dataTable( {
                    "language" : {
                        "url": "{{ asset('bundles/common/plugins/DataTables/Spanish.json') }}"
                    },
                    "bLengthChange" : true,
                    "responsive": true,
                    "bFilter" : true,
                    "order": [[ 1, 'asc' ]],
                    "aLengthMenu" : [[25, 50, 75, 100, -1], [25, 50, 75, 100, "Todas"]],
                    "columnDefs": [
                            {
                                "targets": [0],
                                 "searchable": false,
                                 "orderable": false,                                
                            },
                            {
                                "targets": [4],
                                "render":   function ( data, type, full, meta ) {
                                                return $.Main.moneyFormat(parseFloat(data));
                                            }
                            }                           
                      
                    ],
                    "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {
                        total += parseInt(aData[4]);
                    },
                    "fnDrawCallback": function(){
                        $tfoot=$('#analiticoPersonalTable tfoot');
                        $tfoot.find("td:eq(1)").html('<b>'+$.Main.moneyFormat(parseFloat(total))+'</b>');
                        total = 0
                    },
                    initComplete: function () {
                        this.api().columns([2,3,5,6]).every( function () {
                            var column = this;
                            var select = $('<select><option value=""></option></select>')
                                .appendTo( $(column.header()).empty() )
                                .on( 'change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                    );
             
                                    column
                                        .search( val ? '^'+val+'$' : '', true, false )
                                        .draw();
                                } );
             
                            column.data().unique().sort().each( function ( d, j ) {
                                if (d.indexOf('>') > 0) {
                                    d = $(d).text();
                                }
                                select.append( '<option value="'+d+'">'+d+'</option>' )
                            } );
                        } );
                    }
                });
            }
        })(jQuery);
        $(document).ready(function(){$.Fondo.init();$.TableExport.init()});
        
        (function ($) {
            var exportTable = "#analiticoPersonalTable";
            var ignoreColumn = [];
            // no se sobreescribe el namespace, si ya existe
            $.TableExport = $.TableExport || {};
            $.TableExport.init = function() {
                $(".export-pdf").on("click", function(e) {
					e.preventDefault();
                    $(exportTable).find('thead').hide();
					$(exportTable).tableExport({
						type: 'pdf',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
                    $(exportTable).find('thead').show();
				});
				$(".export-excel").on("click", function(e) {
					e.preventDefault();
                    $(exportTable).find('thead').hide();
					$(exportTable).tableExport({
						type: 'excel',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
                    $(exportTable).find('thead').show();
				});
				$(".export-doc").on("click", function(e) {
					e.preventDefault();
                    $(exportTable).find('thead').hide();
					$(exportTable).tableExport({
						type: 'doc',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
                    $(exportTable).find('thead').show();
				});
				$(".export-csv").on("click", function(e) {
					e.preventDefault();
                    $(exportTable).find('thead').hide();
					$(exportTable).tableExport({
						type: 'csv',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
                    $(exportTable).find('thead').show();
				});
				$(".export-txt").on("click", function(e) {
					e.preventDefault();
                    $(exportTable).find('thead').hide();
					$(exportTable).tableExport({
						type: 'txt',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
                    $(exportTable).find('thead').show();
				});
				$(".export-sql").on("click", function(e) {
					e.preventDefault();
                    $(exportTable).find('thead').hide();
					$(exportTable).tableExport({
						type: 'sql',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
                    $(exportTable).find('thead').show();
				});
				$(".export-json").on("click", function(e) {
					e.preventDefault();
                    $(exportTable).find('thead').hide();
					$(exportTable).tableExport({
						type: 'json',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
                    $(exportTable).find('thead').show();
				});                
            }
        })(jQuery);
    </script>
{% endblock %}
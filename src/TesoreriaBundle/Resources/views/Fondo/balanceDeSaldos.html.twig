{% extends 'CommonBundle::layout.html.twig' %}

{% block contenidoToolbar %}
    <div class="toolbar row">
        <div class="col-sm-6 hidden-xs">
            <div class="page-header">
                <h1><i class="fa fa-list"></i> Balance de Saldos <small></small></h1>
            </div>
        </div>
        <div class="col-sm-6 col-xs-12">
            <a href="#" class="close-subviews">
                <i class="fa fa-arrow-left"></i> VOLVER
            </a>            
            <div class="toolbar-tools pull-right">
                <!-- start: TOP NAVIGATION MENU -->
                <ul class="nav navbar-right">
                </ul>
                <!-- end: TOP NAVIGATION MENU -->
            </div>
        </div>
    </div>
{% endblock %}
{% block contenidoBreadcrumb %}
    <div class="row">
        <div class="col-md-12">
            <ol class="breadcrumb">
                <li>
                    <a href="{{ path('homepage') }}">
                        <i class="fa fa-home" aria-hidden="true"></i>
                    </a>
                </li>
                <li class="active">
                    Tesorer√≠a
                </li>
                <li class="active">
                    Fondos
                </li>
                <li class="active">
                    Balance de Saldos
                </li>                
            </ol>
        </div>
    </div>
{% endblock %}
{% block contenidoContent %}  
    <div class="row">
        <div class="col-sm-12">
            <div class="panel panel-white">
                <div class="panel-heading">
                    <h4 class="panel-title">Balance de<span class="text-bold"> Saldos</span></h4>
                    <div class="panel-tools">
                        {{ include('CommonBundle::dropdownTables.html.twig') }}
                    </div>
                </div>
                <div class="panel-body">
                    <table id="balanceTable" class="table table-striped table-hover" width="100%">
                        <thead>
                            <tr>
                                <th class="text-center">#</th>
                                <th class="" style="width: 40%;">Nombre</th>
                                <th class="text-center" title="Saldo disponible"><i class="fa fa-usd" aria-hidden="true"></i> Disponible</th>
                                <th class="text-center" title="Saldo entregado"><i class="fa fa-usd" aria-hidden="true"></i> Entregado</th>
                                <th class="text-center" title="Saldo pagado"><i class="fa fa-usd" aria-hidden="true"></i> Pagado</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for fondo in fondos %}
                                <tr>
                                    <td class="text-center">{{ fondo.id }}</td>
                                    <td class="" style="width: 40%;">
                                        <strong>{{ fondo.nombre }}</strong><br>
                                        <small>Entidad: {{ fondo.entidad.nombre }}</small>
                                    </td>
                                    <td class="text-center money-text">{{ fondo.getMontoDisponible() }}</td>
                                    <td class="text-center money-text">{{ fondo.getMontoReservado() }}</td>
                                    <td class="text-center money-text">{{ fondo.getMontoUtilizado() }}</td>
                                </tr>
                            {% endfor %}
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="2" class="text-right"><b>TOTAL</b></td>
                                <td class="totales text-center money-text"><i class="fa fa-refresh fa-spin"></i></td>
                                <td class="totales text-center money-text"><i class="fa fa-refresh fa-spin"></i></td>
                                <td class="totales text-center money-text"><i class="fa fa-refresh fa-spin"></i></td>
                            </tr>                        
                        </tfoot>
                    </table>
                </div>            
            </div>
        </div>        
    </div>
    <!-- start: SUBVIEW EXAMPLE FOR THIS PAGE ONLY -->
    <a id="sub_go" href="#example-subview-1" class="hidden show-sv"></a>
    <div id="example-subview-1" class="no-display">
        <div class="col-md-10 col-md-offset-1 ajax-cont"></div>
    </div>    
{% endblock %}
{% block otherStylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/common/plugins/sweetalert/lib/sweet-alert.css' ) }}" />
{% endblock %}

{% block otherJavascripts %}
    <script src="{{ asset('bundles/common/plugins/sweetalert/lib/sweet-alert.min.js' )}}"></script>   

    <script>
        (function ($) {
            // no se sobreescribe el namespace, si ya existe
            $.Fondo = $.Fondo || {};
            $.Fondo.init = function() {               
                totales = [0,0,0];
                _tableAreas=$('#balanceTable').dataTable( {
                    "autoWidth": false,
                    "language" : {
                        "url": "{{ asset('bundles/common/plugins/DataTables/Spanish.json') }}"
                    },
                    "bLengthChange" : true,
                    "responsive": true,
                    "bFilter" : true,
                    "order": [[ 1, 'asc' ]],
                    "aLengthMenu" : [[25, 50, 75, 100, -1], [25, 50, 75, 100, "Todas"]],
                    "columnDefs": [
                            {
                                "targets": [2,3,4],
                                "render":   function ( data, type, full, meta ) {
                                                return $.Main.moneyFormat(parseFloat(data));
                                            }
                            }                           
                      
                    ],
                    "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {
                        totales[0] += parseInt(aData[2]);
                        totales[1] += parseInt(aData[3]);
                        totales[2] += parseInt(aData[4]);
                    },
                    "fnDrawCallback": function(){
                        $tfoot=$('#balanceTable tfoot');
                        $tfoot.find("td:eq(1)").html('<b>'+$.Main.moneyFormat(parseFloat(totales[0]))+'</b>');
                        $tfoot.find("td:eq(2)").html('<b>'+$.Main.moneyFormat(parseFloat(totales[1]))+'</b>');
                        $tfoot.find("td:eq(3)").html('<b>'+$.Main.moneyFormat(parseFloat(totales[2]))+'</b>');
                        totales = [0,0,0]
                    },                    
                });
            }
        })(jQuery);
        $(document).ready(function(){$.Fondo.init();$.TableExport.init()});
        
        (function ($) {
            var exportTable = "#balanceTable";
            var ignoreColumn = [];
            // no se sobreescribe el namespace, si ya existe
            $.TableExport = $.TableExport || {};
            $.TableExport.init = function() {
                $(".export-pdf").on("click", function(e) {
					e.preventDefault();
					$(exportTable).tableExport({
						type: 'pdf',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
				});
				$(".export-excel").on("click", function(e) {
					e.preventDefault();
					$(exportTable).tableExport({
						type: 'excel',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
				});
				$(".export-doc").on("click", function(e) {
					e.preventDefault();
					$(exportTable).tableExport({
						type: 'doc',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
				});
				$(".export-csv").on("click", function(e) {
					e.preventDefault();
					$(exportTable).tableExport({
						type: 'csv',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
				});
				$(".export-txt").on("click", function(e) {
					e.preventDefault();
					$(exportTable).tableExport({
						type: 'txt',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
				});
				$(".export-sql").on("click", function(e) {
					e.preventDefault();
					$(exportTable).tableExport({
						type: 'sql',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
				});
				$(".export-json").on("click", function(e) {
					e.preventDefault();
					$(exportTable).tableExport({
						type: 'json',
						escape: 'false',
						ignoreColumn: ignoreColumn
					});
				});                
            }
        })(jQuery);
    </script>
{% endblock %}
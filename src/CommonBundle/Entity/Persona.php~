<?php

namespace CommonBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * CommonBundle\Entity\Persona
 *
 * @ORM\Table(name="Persona", uniqueConstraints={
 *          @ORM\UniqueConstraint(name="unique_index", columns={"tipoDocumento_id", "dni"})
 *      }
 * )
 * @ORM\Entity
 * @ORM\InheritanceType("SINGLE_TABLE")
 * @ORM\DiscriminatorColumn(name="discr", type="string")
 * @ORM\DiscriminatorMap({
 *                          "persona"    = "Persona"
 *                      })
 *                        "competitor"= "TournamentBundle\Entity\Competitor",
 *                        "coach"     = "TournamentBundle\Entity\Coach",
 *                        "companion" = "TournamentBundle\Entity\Companion",
 *                        "employee"  = "PersonalBundle\Entity\Employee"
 */
class Persona
{
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @var string $nombre
     *
     * @ORM\Column(name="nombre", type="string", length=70)
     * @Assert\NotBlank(
     *      message="name missing!"
     * )
     * @Assert\Type(
     *      type="string"
     * )
     */
    private $nombre;
    
    /**
     * @var string $apellido
     *
     * @ORM\Column(name="apellido", type="string", length=70)
     * @Assert\NotBlank(
     *      message="lastname missing!"
     * )
     * @Assert\Type(
     *      type="string"
     * )
     */
    private $apellido;
    
    /**
     * @var date $fNacimiento;
     * 
     * @ORM\Column(name="fNacimiento", type="date", nullable=true)
     * @Assert\NotBlank(
     *      message="birthdate missing!"
     * )
     * @Assert\Date()
     */
    private $fNacimiento;
    
    /**
     * @var integer $dni
     * 
     * @ORM\Column(name="dni", type="integer")
     * @Assert\NotBlank(
     *      message="dni missing!"
     * )
     * @Assert\Type(
     *      type="integer"
     * )
     * @Assert\GreaterThan(
     *      value = 0
     * )
     */
    private $dni;
    
    /**
     * @var TipoDocumento $tipoDocumento
     * 
     * @ORM\ManyToOne(targetEntity="TipoDocumento")
     * @ORM\JoinColumn(name="tipoDocumento_id", referencedColumnName="id")
     */
    private $tipoDocumento;
    
    /**
     * @var string $email
     *
     * @ORM\Column(name="email", type="string", length=255)
     * @Assert\Email(
     *     message = "Dirección de correo electrónico no válida.",
     *     checkMX = true,
     *     checkHost = true
     * )
     */
    private $email;

    /**
     * @ORM\ManyToOne(targetEntity="CommonBundle\Entity\Partido")
     * @ORM\JoinColumn(name="municipio", referencedColumnName="id")
     */       
    private $municipio;
    
    /**
     * @var string $telefono
     *
     * @ORM\Column(name="telefono", type="string", length=100, nullable=true)
     */
    private $telefono;
    
    /**
     * @var string $facebook
     *
     * @ORM\Column(name="facebook", type="string", length=30, nullable=true)
     * @Assert\Type(
     *      type="string"
     * )
     */
    private $facebook;     

    /**
     * @var string $skype
     *
     * @ORM\Column(name="skype", type="string", length=30, nullable=true)
     * @Assert\Type(
     *      type="string"
     * )
     */
    private $skype;
     
    /**
     * @var string $twitter
     *
     * @ORM\Column(name="twitter", type="string", length=30, nullable=true)
     * @Assert\Type(
     *      type="string"
     * )
     */
    private $twitter;
     
    /**
     * @var string $linkedin
     *
     * @ORM\Column(name="linkedin", type="string", length=30, nullable=true)
     * @Assert\Type(
     *      type="string"
     * )
     */
    private $linkedin;
    
    /**
     * @var text $avatar
     * @ORM\Column(name="avatar", type="text")
     **/
    private $avatar;
    
    /**
     * @ORM\OneToOne(targetEntity="UserControlBundle\Entity\User", mappedBy="person")
     */
    private $user;
    
    /**
     * @var datetime $createdAt
     *
     * @ORM\Column(name="createdAt", type="datetime")
     * @Assert\Date()
     */
    private $createdAt;
    
    /**
     * @var UserControlBundle\Entity\User $createdBy
     * 
     * @ORM\ManyToOne(targetEntity="UserControlBundle\Entity\User")
     * @ORM\JoinColumn(name="createdBy", referencedColumnName="id")
     */
    private $createdBy;

    /**
     * @var datetime $updatedAt
     *
     * @ORM\Column(name="updatedAt", type="datetime", nullable=true)
     * @Assert\Date()
     */
    private $updatedAt;

    /**
     * @var UserControlBundle\Entity\User $updatedBy
     * 
     * @ORM\ManyToOne(targetEntity="UserControlBundle\Entity\User")
     * @ORM\JoinColumn(name="updatedBy", referencedColumnName="id")
     */   
    private $updatedBy;

    /**
     * @var boolean $isActive
     *
     * @ORM\Column(name="isActive", type="boolean")
     */
    protected $isActive;
    
    /**
     * Constructor
     */    
    public function __construct()
    {
        $this->createdAt = new \DateTime();
        $this->isActive = true;
        $this->emails = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * __toString
     */    
    function __toString()
    {
        return $this->dni;
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nombre
     *
     * @param string $nombre
     *
     * @return Persona
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get nombre
     *
     * @return string
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Set apellido
     *
     * @param string $apellido
     *
     * @return Persona
     */
    public function setApellido($apellido)
    {
        $this->apellido = $apellido;

        return $this;
    }

    /**
     * Get apellido
     *
     * @return string
     */
    public function getApellido()
    {
        return $this->apellido;
    }

    /**
     * Set fNacimiento
     *
     * @param \DateTime $fNacimiento
     *
     * @return Persona
     */
    public function setFNacimiento($fNacimiento)
    {
        $this->fNacimiento = $fNacimiento;

        return $this;
    }

    /**
     * Get fNacimiento
     *
     * @return \DateTime
     */
    public function getFNacimiento()
    {
        return $this->fNacimiento;
    }

    /**
     * Set dni
     *
     * @param integer $dni
     *
     * @return Persona
     */
    public function setDni($dni)
    {
        $this->dni = $dni;

        return $this;
    }

    /**
     * Get dni
     *
     * @return integer
     */
    public function getDni()
    {
        return $this->dni;
    }

    /**
     * Set telefono
     *
     * @param string $telefono
     *
     * @return Persona
     */
    public function setTelefono($telefono)
    {
        $this->telefono = $telefono;

        return $this;
    }

    /**
     * Get telefono
     *
     * @return string
     */
    public function getTelefono()
    {
        return $this->telefono;
    }

    /**
     * Set facebook
     *
     * @param string $facebook
     *
     * @return Persona
     */
    public function setFacebook($facebook)
    {
        $this->facebook = $facebook;

        return $this;
    }

    /**
     * Get facebook
     *
     * @return string
     */
    public function getFacebook()
    {
        return $this->facebook;
    }

    /**
     * Set skype
     *
     * @param string $skype
     *
     * @return Persona
     */
    public function setSkype($skype)
    {
        $this->skype = $skype;

        return $this;
    }

    /**
     * Get skype
     *
     * @return string
     */
    public function getSkype()
    {
        return $this->skype;
    }

    /**
     * Set twitter
     *
     * @param string $twitter
     *
     * @return Persona
     */
    public function setTwitter($twitter)
    {
        $this->twitter = $twitter;

        return $this;
    }

    /**
     * Get twitter
     *
     * @return string
     */
    public function getTwitter()
    {
        return $this->twitter;
    }

    /**
     * Set linkedin
     *
     * @param string $linkedin
     *
     * @return Persona
     */
    public function setLinkedin($linkedin)
    {
        $this->linkedin = $linkedin;

        return $this;
    }

    /**
     * Get linkedin
     *
     * @return string
     */
    public function getLinkedin()
    {
        return $this->linkedin;
    }

    /**
     * Set avatar
     *
     * @param string $avatar
     *
     * @return Persona
     */
    public function setAvatar($avatar)
    {
        $this->avatar = $avatar;

        return $this;
    }

    /**
     * Get avatar
     *
     * @return string
     */
    public function getAvatar()
    {
        return $this->avatar;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     *
     * @return Persona
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     *
     * @return Persona
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Set isActive
     *
     * @param boolean $isActive
     *
     * @return Persona
     */
    public function setIsActive($isActive)
    {
        $this->isActive = $isActive;

        return $this;
    }

    /**
     * Get isActive
     *
     * @return boolean
     */
    public function getIsActive()
    {
        return $this->isActive;
    }

    /**
     * Set tipoDocumento
     *
     * @param \CommonBundle\Entity\TipoDocumento $tipoDocumento
     *
     * @return Persona
     */
    public function setTipoDocumento(\CommonBundle\Entity\TipoDocumento $tipoDocumento = null)
    {
        $this->tipoDocumento = $tipoDocumento;

        return $this;
    }

    /**
     * Get tipoDocumento
     *
     * @return \CommonBundle\Entity\TipoDocumento
     */
    public function getTipoDocumento()
    {
        return $this->tipoDocumento;
    }

    /**
     * Set user
     *
     * @param \UserControlBundle\Entity\User $user
     *
     * @return Persona
     */
    public function setUser(\UserControlBundle\Entity\User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \UserControlBundle\Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Set createdBy
     *
     * @param \UserControlBundle\Entity\User $createdBy
     *
     * @return Persona
     */
    public function setCreatedBy(\UserControlBundle\Entity\User $createdBy = null)
    {
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Get createdBy
     *
     * @return \UserControlBundle\Entity\User
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Set updatedBy
     *
     * @param \UserControlBundle\Entity\User $updatedBy
     *
     * @return Persona
     */
    public function setUpdatedBy(\UserControlBundle\Entity\User $updatedBy = null)
    {
        $this->updatedBy = $updatedBy;

        return $this;
    }

    /**
     * Get updatedBy
     *
     * @return \UserControlBundle\Entity\User
     */
    public function getUpdatedBy()
    {
        return $this->updatedBy;
    }
    
    /**
     * Set municipio
     *
     * @param \CommonBundle\Entity\Partido $municipio
     * @return Persona
     */
    public function setMunicipio(\CommonBundle\Entity\Partido $municipio = null)
    {
        $this->municipio = $municipio;

        return $this;
    }

    /**
     * Get municipio
     *
     * @return \CommonBundle\Entity\Partido
     */
    public function getMunicipio()
    {
        return $this->municipio;
    }    
}

<?php

namespace AcreditacionBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AreaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AreaRepository extends EntityRepository {

    /**
     * Retorna el nombre de una area cuyo id se proporciona como parámetro
     */
    public function getNombre($idArea) {
        $area = $this->createQueryBuilder('area')
                        ->where('area.id = ?1')
                        ->setParameter(1, $idArea)->getQuery()->getSingleResult();

        return $area->getNombre();
    }

    /**
     * Retorna las areas en donde es responsable el usuario cuyo id se proporciona como parámetro
     */
    public function getAreasResponsable($idUsuario) {
        return $this->createQueryBuilder('area')
                        ->innerJoin('area.usuariosResponsables', 'responsable')
                        ->where('responsable.id = ?1')
                        ->setParameter(1, $idUsuario)->getQuery()->getResult();
    }

    /**
     * Retorne los acreditados de tipo gestion de un area determinada. El area se recibe como parámetro
     */
    public function esResponsableArea($idUsuario, $idArea) {
        $result = $this->createQueryBuilder('area')
                        ->innerJoin('area.usuariosResponsables', 'responsable')
                        ->where('area.id = ?1')
                        ->andWhere('responsable = ?2')
                        ->setParameters(array(1 => $idArea, 2 => $idUsuario))
                        ->getQuery()->getResult();
        return (count($result) > 0) ? true : false;
    }

    /**
     * 
     */
    public function esEliminable($idArea) {
        $em = $this->getEntityManager();
        $result = $em->createQuery('
        SELECT personal FROM AcreditacionBundle:PersonalJuegos personal
        INNER JOIN personal.area area
        WHERE area.id = :idArea')->setParameter('idArea', $idArea)->getResult();
        return (count($result) > 0) ? false : true;
    }

}

<?php

namespace InscripcionBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PlanillaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlanillaRepository extends EntityRepository
{
    public function dataTable($request)
    {
        return array(
                      "total"    => $this->getTotalRows(),
                      "filtered" => $this->getFilteredRows($request),
                      "rows"     => $this->getRows($request)
            );
    }
    
    public function getRows($request)
    {
        $columns = ["s.id",
                    "t.nombre ".$request->get('order')[0]['dir'].
                    ",d.nombre ".$request->get('order')[0]['dir'].
                    ",c.nombre ".$request->get('order')[0]['dir'].
                    ",g.nombre ".$request->get('order')[0]['dir'].
                    ",m.nombre ".$request->get('order')[0]['dir'].
                    ",s.nombre ",
                    "eventos"];
        $where = "( s.id LIKE ?1 OR
                    s.nombre LIKE ?1 OR
                    d.nombre LIKE ?1 OR
                    t.nombre LIKE ?1 OR
                    g.nombre LIKE ?1 OR
                    c.nombre LIKE ?1 OR
                    m.nombre LIKE ?1)";
                
        return $this->getEntityManager()
                        ->createQuery(" SELECT p,s.id AS HIDDEN, COUNT(e.id) AS HIDDEN eventos
                                        FROM InscripcionBundle:Planilla p
                                        JOIN p.segmento s
                                        JOIN s.disciplina d
                                        JOIN s.torneo t
                                        JOIN s.categoria c
                                        JOIN s.modalidad m
                                        JOIN s.genero g
                                        LEFT JOIN s.eventos e
                                        WHERE $where
                                        GROUP BY s.id
                                        ORDER BY ".$columns[$request->get('order')[0]['column']]." ".$request->get('order')[0]['dir'])
                        ->setParameter(1,'%'.$request->get('search')['value'].'%')
                        ->setMaxResults($request->get('length'))
                        ->setFirstResult($request->get('start'))
                        ->getResult();
    }
    
    public function getFilteredRows($request)
    {
        $where = "( s.id LIKE ?1 OR
                    s.nombre LIKE ?1 OR
                    d.nombre LIKE ?1 OR
                    t.nombre LIKE ?1 OR
                    g.nombre LIKE ?1 OR
                    c.nombre LIKE ?1 OR
                    m.nombre LIKE ?1)";
                
        return $this->getEntityManager()
                        ->createQuery(" SELECT COUNT(p)
                                        FROM InscripcionBundle:Planilla p
                                        JOIN p.segmento s
                                        JOIN s.disciplina d
                                        JOIN s.torneo t
                                        JOIN s.categoria c
                                        JOIN s.modalidad m
                                        JOIN s.genero g                                        
                                        WHERE $where ")
                        ->setParameter(1,'%'.$request->get('search')['value'].'%')
                        ->getSingleScalarResult();
    }
    
    public function getTotalRows()
    {
        return $this->getEntityManager()
                        ->createQuery(" SELECT COUNT(p)
                                        FROM InscripcionBundle:Planilla p")
                        ->getSingleScalarResult();
    }
    
    //public function findAllByEvento($evento)
    //{
    //    return $this->createQueryBuilder('i')
    //        ->where('i.evento = ?1')
    //        ->setParameter(1, $evento)->getQuery()->getResult();
    //}
    //
    //public function countInscriptosByTorneo()
    //{
    //    $q=$this->getEntityManager()->createQuery(' SELECT t.id,t.nombre, SUM(i.cantidadFemeninos) as fem,SUM(i.cantidadMasculinos) as mas,SUM(i.cantidadMasculinos+i.cantidadFemeninos) as total
    //                                                FROM InscripcionBundle:Inscripto i
    //                                                JOIN i.evento e
    //                                                JOIN e.torneo t
    //                                                GROUP BY t.id
    //                                                ORDER BY t.id DESC'
    //            );
    //    return $q->getResult();
    //}
    //
    //public function getMunicipiosSinInscriptos()
    //{
    //    $q=$this->getEntityManager()->createQuery('
    //                                                SELECT m
    //                                                FROM CommonBundle:Partido m
    //                                                WHERE m.provincia = 1 AND m.id NOT IN (
    //                                                    SELECT m1.id
    //                                                    FROM InscripcionBundle:Inscripto i
    //                                                    JOIN i.municipio m1)'
    //            );
    //    return $q->getResult();
    //}
    //
    //public function getProgreso()
    //{
    //    $em=$this->getEntityManager();
    //    $q='SELECT SUM(i.cantidadMasculinos + i.cantidadFemeninos) as cant, DATE_FORMAT(i.createdAt,"%d-%m-%Y") as fecha
    //        FROM services_juegosba_final.Inscripto i
    //        WHERE DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)<= DATE(i.createdAt)
    //        GROUP BY fecha
    //        ORDER BY i.createdAt ASC';
    //    return $em->getConnection()->query($q)->fetchAll();
    //}
}
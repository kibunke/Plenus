<?php

namespace InscripcionBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * InscriptoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InscriptoRepository extends EntityRepository
{
    public function findAllByEvento($evento)
    {
        return $this->createQueryBuilder('i')
            ->where('i.evento = ?1')
            ->setParameter(1, $evento)->getQuery()->getResult();
    }
    
    public function countInscriptosByTorneo()
    {
        $q=$this->getEntityManager()->createQuery(' SELECT t.id,t.nombre, SUM(i.cantidadFemeninos) as fem,SUM(i.cantidadMasculinos) as mas,SUM(i.cantidadMasculinos+i.cantidadFemeninos) as total
                                                    FROM InscripcionBundle:Inscripto i
                                                    JOIN i.evento e
                                                    JOIN e.torneo t
                                                    GROUP BY t.id
                                                    ORDER BY t.id DESC'
                );
        return $q->getResult();
    }
    
    public function getMunicipiosSinInscriptos()
    {
        $q=$this->getEntityManager()->createQuery('
                                                    SELECT m
                                                    FROM CommonBundle:Partido m
                                                    WHERE m.provincia = 1 AND m.id NOT IN (
                                                        SELECT m1.id
                                                        FROM InscripcionBundle:Inscripto i
                                                        JOIN i.municipio m1)'
                );
        return $q->getResult();
    }
    
    public function getProgreso()
    {
        $em=$this->getEntityManager();
        $q='SELECT SUM(i.cantidadMasculinos + i.cantidadFemeninos) as cant, DATE_FORMAT(i.createdAt,"%d-%m-%Y") as fecha
            FROM services_juegosba_final.Inscripto i
            WHERE DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)<= DATE(i.createdAt)
            GROUP BY fecha
            ORDER BY i.createdAt ASC';
        return $em->getConnection()->query($q)->fetchAll();
    }    
}
<?php

namespace UsuarioBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;
/**
 * UsuarioBundle\Entity\Email
 * 
 * @ORM\Table()
 * @ORM\Entity()
 * @Gedmo\Loggable 
 */

class Email
{  
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @var string $casilla
     *
     * @ORM\Column(name="casilla", type="string", length=255)
     * @Gedmo\Versioned
     * @Assert\Email(
     *     message = "Dirección de correo electrónico no válida.",
     *     checkMX = true,
     *     checkHost = true
     * )
     */
    private $casilla;
    
    /**
     * @var string $usuario
     *
     * @ORM\ManyToOne(targetEntity="Usuario", inversedBy="emails")
     * @ORM\JoinColumn(name="usuario", referencedColumnName="id")
     */       
    private $usuario;
    
    /**
     * @var datetime $createdAt
     *
     * @ORM\Column(name="createdAt", type="datetime")
     */
    private $createdAt;
    
    /**
     * @ORM\ManyToOne(targetEntity="Usuario")
     * @ORM\JoinColumn(name="createdBy", referencedColumnName="id")
     */       
    private $createdBy;

    /**
     * @var datetime $updatedAt
     *
     * @ORM\Column(name="updatedAt", type="datetime", nullable=true)
     */
    private $updatedAt;

    /**
     * @ORM\ManyToOne(targetEntity="Usuario")
     * @ORM\JoinColumn(name="updatedBy", referencedColumnName="id")
     */   
    private $updatedBy;

    /**
     * @var boolean $activo
     *
     * @ORM\Column(name="activo", type="boolean")
     * @Gedmo\Versioned
     */
    protected $activo;    

    /**
     * Constructor
     */
    public function __construct($casilla = null, $user = null)
    {
        $this->setActivo(true);
        $this->createdAt = new \DateTime();
        $this->setCasilla($casilla);
        //$this->createdBy($user);
    }
    
    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     *
     * @return Email
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     *
     * @return Email
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Set activo
     *
     * @param boolean $activo
     *
     * @return Email
     */
    public function setActivo($activo)
    {
        $this->activo = $activo;

        return $this;
    }

    /**
     * Get activo
     *
     * @return boolean
     */
    public function getActivo()
    {
        return $this->activo;
    }

    /**
     * Set usuario
     *
     * @param \UsuarioBundle\Entity\Usuario $usuario
     *
     * @return Email
     */
    public function setUsuario(\UsuarioBundle\Entity\Usuario $usuario = null)
    {
        $this->usuario = $usuario;

        return $this;
    }

    /**
     * Get usuario
     *
     * @return \UsuarioBundle\Entity\Usuario
     */
    public function getUsuario()
    {
        return $this->usuario;
    }

    /**
     * Set createdBy
     *
     * @param \UsuarioBundle\Entity\Usuario $createdBy
     *
     * @return Email
     */
    public function setCreatedBy(\UsuarioBundle\Entity\Usuario $createdBy = null)
    {
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Get createdBy
     *
     * @return \UsuarioBundle\Entity\Usuario
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Set updatedBy
     *
     * @param \UsuarioBundle\Entity\Usuario $updatedBy
     *
     * @return Email
     */
    public function setUpdatedBy(\UsuarioBundle\Entity\Usuario $updatedBy = null)
    {
        $this->updatedBy = $updatedBy;

        return $this;
    }

    /**
     * Get updatedBy
     *
     * @return \UsuarioBundle\Entity\Usuario
     */
    public function getUpdatedBy()
    {
        return $this->updatedBy;
    }
    
    /**
     * Set casilla
     *
     * @param string $casilla
     * @return Email
     */
    public function setCasilla($casilla)
    {
        $this->casilla = $casilla;

        return $this;
    }

    /**
     * Get casilla
     *
     * @return string 
     */
    public function getCasilla()
    {
        return $this->casilla;
    }    
    
    public function __toString() {
        return $this->getCasilla();
    }

    public function exist($arr) {
        foreach ($arr as &$member) {
            if ($member->getCasilla() === $this->getCasilla()) {
                return true;
            }
        }
        return false;
    }
}

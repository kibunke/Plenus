<?php

namespace JuegosBA\AcreditacionBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * JuegosBA\AcreditacionBundle\Entity\Area
 * @ORM\Table(name="services_juegosba_final.Area")
 * @ORM\Entity(repositoryClass="JuegosBA\AcreditacionBundle\Entity\Repository\AreaRepository")
 */
class Area {
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @var string $nombre
     * 
     * @ORM\Column(name="nombre", type="string")
     */
    private $nombre;
    
    /**
     * @var string $descripcion
     * 
     * @ORM\Column(name="descripcion", type="text", nullable=true)
     */
    private $descripcion;    
             
    /**
     * @var AreaParametros $parametros
     * 
     * @ORM\OneToOne(targetEntity="AreaParametros", cascade={"persist", "remove"})
     * @ORM\JoinColumn(name="parametros", referencedColumnName="id")
     */
    private $parametros;
    
    /**
     * @var ArrayCollection $funcionesPermitidas
     * 
     * @ORM\ManyToMany(targetEntity="FuncionJuegos", inversedBy="areasAbarcadas")
     * @ORM\JoinTable(name="services_juegosba_final.Area_FuncionJuegos")
     */
    private $funcionesPermitidas;
    
    /**
     * @var ArrayCollection $usuariosResponsables
     * 
     * @ORM\ManyToMany(targetEntity="JuegosBA\SeguridadBundle\Entity\Usuario")
     * @ORM\JoinTable(name="services_juegosba_final.Area_Usuario", 
     *                      joinColumns={@ORM\JoinColumn(name="area_id", referencedColumnName="id")},
     *                      inverseJoinColumns={@ORM\JoinColumn(name="usuario_id", referencedColumnName="id")}
     *               )
     */
    private $usuariosResponsables;
    
    /**
     * @var datetime $createdAt
     *
     * @ORM\Column(name="createdAt", type="datetime")
     */
    private $createdAt;
    
    /**
     * @var JuegosBA\SeguridadBundle\Entity\Usuario $createdBy
     * 
     * @ORM\ManyToOne(targetEntity="JuegosBA\SeguridadBundle\Entity\Usuario")
     * @ORM\JoinColumn(name="createdBy", referencedColumnName="id")
     */
    private $createdBy;

    /**
     * @var datetime $updatedAt
     *
     * @ORM\Column(name="updatedAt", type="datetime", nullable=true)
     */
    private $updatedAt;

    /**
     * @var JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy
     * 
     * @ORM\ManyToOne(targetEntity="JuegosBA\SeguridadBundle\Entity\Usuario")
     * @ORM\JoinColumn(name="updatedBy", referencedColumnName="id")
     */   
    private $updatedBy;
    
    public function __construct() {
        $this->usuariosResponsables = new ArrayCollection();
        $this->funcionesPermitidas = new ArrayCollection();
    }
    

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nombre
     *
     * @param string $nombre
     * @return Area
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get nombre
     *
     * @return string 
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Set descripcion
     *
     * @param string $descripcion
     * @return Area
     */
    public function setDescripcion($descripcion)
    {
        $this->descripcion = $descripcion;

        return $this;
    }

    /**
     * Get descripcion
     *
     * @return string 
     */
    public function getDescripcion()
    {
        return $this->descripcion;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     * @return Area
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime 
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     * @return Area
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime 
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Set parametros
     *
     * @param \JuegosBA\AcreditacionBundle\Entity\AreaParametros $parametros
     * @return Area
     */
    public function setParametros(\JuegosBA\AcreditacionBundle\Entity\AreaParametros $parametros = null)
    {
        $this->parametros = $parametros;

        return $this;
    }

    /**
     * Get parametros
     *
     * @return \JuegosBA\AcreditacionBundle\Entity\AreaParametros 
     */
    public function getParametros()
    {
        return $this->parametros;
    }

    /**
     * Add usuariosResponsables
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $usuariosResponsables
     * @return Area
     */
    public function addUsuariosResponsable(\JuegosBA\SeguridadBundle\Entity\Usuario $usuariosResponsables)
    {
        $this->usuariosResponsables[] = $usuariosResponsables;

        return $this;
    }

    /**
     * Remove usuariosResponsables
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $usuariosResponsables
     */
    public function removeUsuariosResponsable(\JuegosBA\SeguridadBundle\Entity\Usuario $usuariosResponsables)
    {
        $this->usuariosResponsables->removeElement($usuariosResponsables);
    }

    /**
     * Get usuariosResponsables
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getUsuariosResponsables()
    {
        return $this->usuariosResponsables;
    }

    /**
     * Set createdBy
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $createdBy
     * @return Area
     */
    public function setCreatedBy(\JuegosBA\SeguridadBundle\Entity\Usuario $createdBy = null)
    {
        $this->createdBy = $createdBy;

        return $this;
    }

    /**
     * Get createdBy
     *
     * @return \JuegosBA\SeguridadBundle\Entity\Usuario 
     */
    public function getCreatedBy()
    {
        return $this->createdBy;
    }

    /**
     * Set updatedBy
     *
     * @param \JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy
     * @return Area
     */
    public function setUpdatedBy(\JuegosBA\SeguridadBundle\Entity\Usuario $updatedBy = null)
    {
        $this->updatedBy = $updatedBy;

        return $this;
    }

    /**
     * Get updatedBy
     *
     * @return \JuegosBA\SeguridadBundle\Entity\Usuario 
     */
    public function getUpdatedBy()
    {
        return $this->updatedBy;
    }

    /**
     * Add funcionesPermitidas
     *
     * @param \JuegosBA\AcreditacionBundle\Entity\FuncionJuegos $funcionesPermitidas
     * @return Area
     */
    public function addFuncionesPermitida(\JuegosBA\AcreditacionBundle\Entity\FuncionJuegos $funcionesPermitidas)
    {
        $this->funcionesPermitidas[] = $funcionesPermitidas;

        return $this;
    }

    /**
     * Remove funcionesPermitidas
     *
     * @param \JuegosBA\AcreditacionBundle\Entity\FuncionJuegos $funcionesPermitidas
     */
    public function removeFuncionesPermitida(\JuegosBA\AcreditacionBundle\Entity\FuncionJuegos $funcionesPermitidas)
    {
        $this->funcionesPermitidas->removeElement($funcionesPermitidas);
    }

    /**
     * Get funcionesPermitidas
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getFuncionesPermitidas()
    {
        return $this->funcionesPermitidas;
    }
    
    public function __toString() {
        return $this->getNombre();
    }
}
